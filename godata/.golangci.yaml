run:
  # Include test files or not.
  # Default: true
  tests: true

linters-settings:
  gocritic:
    # Enable multiple checks by tags, run `GL_DEBUG=gocritic golangci-lint run` to see all tags and checks.
    # See https://github.com/go-critic/go-critic#usage -> section "Tags".
    # Default: []
    enabled-tags:
#      - diagnostic
#      - style
#      - performance
#      - experimental
      - opinionated
    # Which checks should be enabled; can't be combined with 'disabled-checks'.
    # See https://go-critic.github.io/overview#checks-overview.
    # To check which checks are enabled run `GL_DEBUG=gocritic golangci-lint run`.
    # By default, list of stable checks is used.
    disabled-checks:
      - hugeParam

linters:
  enable:
    - asciicheck
    - bidichk
    - bodyclose
    - contextcheck
    - cyclop
    - deadcode
    - depguard
    - dogsled
    - dupl
    - durationcheck
    - errcheck
    - errchkjson
    - errname
    - errorlint
    - execinquery
    - exportloopref
    - forbidigo
    - forcetypeassert
    - funlen
    - gci
    - gochecknoglobals
    - gochecknoinits
    - gocognit
    - goconst
    - gocritic
    - gocyclo
    - godot
    - godox
    - goerr113
    - gofmt
    - gofumpt
    - goheader
    - goimports
    - gomnd
    - gomoddirectives
    - gomodguard
    - goprintffuncname
    - gosec
    - gosimple
    - govet
    - importas
    - ineffassign
    - lll
    - makezero
    - misspell
    - nakedret
    - nestif
    - nilerr
    - nilnil
    - nlreturn
    - noctx
    - nolintlint
    - nosprintfhostport
    - paralleltest
    - prealloc
    - predeclared
    - promlinter
    - revive
    - rowserrcheck
    - sqlclosecheck
    - staticcheck
    - structcheck
    - stylecheck
    - tenv
    - thelper
    - tparallel
    - typecheck
    - unconvert
    - unparam
    - unused
    - usestdlibvars
    - varcheck
    - varnamelen
    - wastedassign
    - whitespace
    - wrapcheck
    - wsl
  # Run only fast linters from enabled linters set (first run won't be fast)
  # Default: false
  fast: false

issues:
  # Independently of option `exclude` we use default exclude patterns,
  # it can be disabled by this option.
  # To list all excluded by default patterns execute `golangci-lint run --help`.
  # Default: true.
  exclude-use-default: false
  # Excluding configuration per-path, per-linter, per-text and per-source
  exclude-rules:
    - path: _test\.go
      linters:
        - dupl
        - funlen
        - forcetypeassert
        - wrapcheck
    - path: mocks/
      linters:
        - forcetypeassert
        - revive
        - wrapcheck
    - linters:
      - errcheck
      text: ".Close"
    - linters:
      - goerr113
      text: "err113: do not define dynamic errors, use wrapped static errors instead:"
    - linters:
      - gomnd
      source: "strconv.ParseFloat"
    - linters:
      - gosec
      text: "G204: Subprocess launched with a potential tainted input or cmd arguments"
    - linters:
      - stylecheck
      text: "ST1000: at least one file in a package should have a package comment"
    - linters:
      - wrapcheck
      text: "error returned from interface method should be wrapped:"
    - linters:
        - wrapcheck
      text: "error returned from external package is unwrapped: sig: func github.com/WLM1ke/poptimizer/opt/pkg"
  fix: true
